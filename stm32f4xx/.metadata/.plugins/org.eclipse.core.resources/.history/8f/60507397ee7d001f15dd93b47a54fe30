/*
 * system_config.c
 *
 *  Created on: Sep 24, 2024
 *  Author: fahru
 */
/**
  * @brief System Clock Configuration
  * @retval None
  */
#include "system_config.h"
#include "main.h" // Included this for Error handling

void SystemClock_Config(void)
{
    RCC_OscInitTypeDef RCC_OscInitStruct = {0};
    RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

    // Configure the main internal regulator output voltage
    __HAL_RCC_PWR_CLK_ENABLE();
    __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);

    // Initializes the RCC Oscillators according to the specified parameters
    // Here, HSE is used directly as the clock source without PLL
    RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
    RCC_OscInitStruct.HSEState = RCC_HSE_ON;
    RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;  // Disable PLL
    if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
    {
        // Initialization Error
        Error_Handler();
    }

    // Initializes the CPU, AHB, and APB buses clocks
    // Set HSE as the system clock
    RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
                                | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
    RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;  // Use HSE directly as the system clock
    RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;      // AHB bus clock = SYSCLK / 1
    RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;       // APB1 bus clock = HCLK / 1
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;       // APB2 bus clock = HCLK / 1

    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
    {
        // Initialization Error
        Error_Handler();
    }
   // Enable clock for USART1
  __HAL_RCC_USART2_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();

}

